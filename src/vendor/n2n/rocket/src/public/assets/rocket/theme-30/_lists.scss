/*
 * Toolbar
 */

.rocket-impl-overview-tools {
    @include media-breakpoint-up(md) {
        position: sticky;
		position: -webkit-sticky;
        top: 44px;    
    }
    background-color: $gray-200;
    z-index: 50;
}
@include media-breakpoint-up(sm) {
    .rocket-impl-container {
        display: grid;
        grid-template-columns:  1fr auto auto;
        grid-column-gap: 20px;
    }
}

.rocket-impl-quicksearch {
    > label {
        font-weight: bold;
        margin-right: 1rem;
    }
    > .input-group > .form-control {
        width: 10rem;
    }
    &.rocket-active > .input-group > .input-group-append > .btn:last-child {
        color: white;
        background: $primary;
        border-color: darken($primary, 15);
    }
}

/*
 * Content
 */
    

.rocket-collection .rocket-entry.rocket-last-mod {
    animation: last-mod-transition 30s;
    background: inherit;
}

@keyframes last-mod-transition {
    0% {
        background: transparent;
    }
    1% {
        background: lighten($aczent-2-l-300, 0.02);
    }
    6% {
        background: lighten($aczent-2-l-300, 0.01);
    }
    99% {
        background: $aczent-2-l-300;
    }
    100% {
        background: inherit;
    }
}

.rocket-handle {
    display: inline-block;
    // add padding-left back in, if needed, but then overwrite in _entry.scss
    // padding-left: 1rem;
    cursor: move;
}

.rocket-locked,
table tr.rocket-locked:hover {
    background: $aczent-2;
}

.rocket-outdated,
table tr.rocket-outdated:hover {
    background: $gray-200;
    & > * {
        opacity: 0.4;
    }
}

.rocket-removed,
table tr.rocket-removed:hover {
    background: $gray-200;
    & > * {
        opacity: 0.2;
    }
}

.rocket-reloading,
table tr.rocket-reloading:hover {
    background: repeating-linear-gradient( 75deg, #{$aczent-2-d-100}, #{$aczent-2-d-100} 19px, #{$aczent-2} 19px, #{$aczent-2} 35px);
    background-size: 200% 200%;
    animation: reload 40s linear infinite;
}

@keyframes reload {
    100% {
    background-position: 100% 100%;
  }
}

/*
 * Table
 */


.rocket-table {
    
    td.invisible,
    th.invisible {
        width: 0;
        padding: 0;
        font-size: 0;
    }

    > thead {
        // position: sticky;
        // position: -webkit-sticky;
        // top: 80px;
        th {
            color: $white;
            background-color: $table-header-bg;
        }

        .rocket-general-entry-selector {
            padding: 0 0.5rem;
            &:empty {
                padding: 0;
            }
        }
    }

    > tbody {
        tr.cdk-drag-placeholder,
        &:not(.cdk-drop-list-dragging) tr:hover {
            > td:first-child.invisible + td,
            > td:first-child {
                position: relative;
                &:before {
                    content: "";
                    position: absolute;
                    top: 0;
                    left: 0;
                    width: 3px;
                    bottom: 0;
                    background: $primary;
                }
            }
        }

        .rocket-entry-selector {
            width: 0rem;
            white-space: nowrap;
            &:empty {
                padding: 0;
            }
        }
    }

    .rocket-table-commands {
        white-space: nowrap;
        width: 5%;
        padding: 0.4rem 0.75rem;
        // z-index: 0;
        @if ($sticky-commands-enabled) {
            // // sticky commands in table
            position: sticky;
            position: -webkit-sticky;
            right: 0;
            &:after {
                content: "";
                border-left: 1px solid $table-border-color;
                // border-bottom: 0.5px solid $table-border-color;
                position: absolute;
                top: 0;
                left: -1px;
                width: 100%;
                bottom: 0px;
                //chrome hack --> gets safari to a 1px point bug in der border left of the element
                bottom: 0.016px;
                background-color: $white;
                z-index: -1;
            }
        }
    }
    @if ($sticky-commands-enabled) {
        td.rocket-table-commands:hover,
        td:hover ~ .rocket-table-commands {
            &:after {
                background-color: $table-hover-bg;
            }
        }
    }
    
    @if ($sticky-commands-enabled) {
        th.rocket-table-commands {
            &:after {
                border-left: 1.5px solid $table-header-bg;
                border-top: 1px solid $table-border-color;
                border-bottom: 3px solid $table-border-color;
                top: -1px;
                bottom: -2.984px;
                background-color: $table-header-bg;
            }
        }
    }

    > tbody .rocket-table-commands {
        border-left: 1px solid $table-border-color;
    }

    .rocket-simple-commands > .btn > span,
    .rocket-simple-commands > .rocket-button-control > .btn > span {
        display: none;
    }
}


/*
 * tree
 */

.rocket-tree-level-0 {
    border-top: 5px solid $gray-400;
    > td {
        font-weight: bold;
    }
}

// new from tomekk

td > .rocket-file-out-field:last-child > *:last-child,
td > *:last-child {
    margin-bottom: 0;
}

// td .rocket-minimal > label,
th > span,
td .rocket-crumb-group > span:not(.rocket-unimportant):not(.rocket-important),
td .rocket-ui-string-out-field {
    // Tomekk: unsupported property, be carefull. Works in Firefox, Chrome, Safari on Mac
    /* autoprefixer: off */
    -webkit-box-orient: vertical;
    /* autoprefixer: on */
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 1;
    min-width: 5ch;
}

td > .rocket-split {
    display: inline-block;
}


.rocket-minimal {
    display: grid;
    // grid-template-columns: auto 1fr;
    grid-template-columns: minmax(min-content, auto) 1fr;
    gap: 5px;
    align-items: baseline;

    > label {
        color: $gray-500;
        font-size: 0.75rem;
        white-space: nowrap;
        padding: 0.325rem 0 0 0;
        grid-row-start: 1;
        grid-column-start: 2;
        grid-column-end: 3;
        margin-bottom: 0;
    }

    > .rocket-structure-content {
        grid-row-start: 1;
        grid-column-start: 1;
        grid-column-end: 2;
    }

    // > .rocket-structure-content:not(:empty) {
    //     padding: 0 .5em 0 0;
    // }
}

.rocket-crumb-group {
    display: grid;
    grid-auto-flow: column;
    grid-gap: .5em;
    align-items: baseline;
    
    i {
        width: auto;
    }
    i,
    span {
        &.rocket-important,
        &.rocket-unimportant {
            display: flex;
            align-items: center;
        }
    }

    i.rocket-important:not(:only-child), 
    span.rocket-important:not(:only-child) {
        margin-right: 0;
    }

    > i:only-child {
        line-height: 1.5;
        //add zero-width-space, prevents jumping pixel
        &:after {
            content: "\200b";
        }
    }
}

.rocket-crumb-group:not(:last-child):not(:only-child) {
    padding-right: 0.5em;
    margin-right: 0.5em;
    border-right: 1px solid $gray-400;
}

.rocket-compact .rocket-file-out-field > a > img,
.rocket-compact .rocket-file-out-field > img {
    margin-top: -4px;
    margin-bottom: -4px;
    display: block;
}

// end new from tomekk


.rocket-tree-level-#{$rocket-tree-level-num} ~ [class*="rocket-tree-level-"] > td:first-child:not(.rocket-entry-selector),
.rocket-tree-level-#{$rocket-tree-level-num} ~ [class*="rocket-tree-level-"] > .rocket-entry-selector + td:not(.rocket-entry-selector),
.rocket-tree-level-#{$rocket-tree-level-num} ~ [class*="rocket-tree-level-"] > .rocket-entry-selector + .rocket-entry-selector + td {
    position: relative;
    padding-left: calc(#{$rocket-tree-fixed-padding} + (20px * #{$rocket-tree-level-num - 2}) + #{$rocket-tree-item-width-levels} + 5px);
    &:before {
        content: "\00a0";
        width: $rocket-tree-item-width-levels;
        border-left: 1px solid $gray-400;
        position: absolute;
        top: $table-cell-padding;
        left: $table-cell-padding;
        background-image: $n2n-tree-indicator-icon;
        background-repeat: no-repeat;
        background-size: 10px;
        background-position: center right 0;
        left: calc(#{$table-cell-padding} + 27px + (#{$rocket-tree-offset-to-label}*2 * #{$rocket-tree-level-num - 3}) - 1px);
    }
}



@for $i from 1 through $rocket-tree-level-num {
    .rocket-tree-level-#{$i} > td:first-child:not(.rocket-entry-selector),
    .rocket-tree-level-#{$i} > .rocket-entry-selector + td:not(.rocket-entry-selector),
    .rocket-tree-level-#{$i} > .rocket-entry-selector + .rocket-entry-selector + td {
        position: relative;
        @if ($i == 1) {
            padding-left: calc(#{$rocket-tree-fixed-padding} + #{$rocket-tree-item-width-level-1});
        }

        @if ($i == 2) {
            padding-left: calc(#{$rocket-tree-fixed-padding} + #{$rocket-tree-offset-to-label/2} - 1px + #{$rocket-tree-item-width-levels});
        }

        @if ($i > 2) {
            padding-left: calc(#{$rocket-tree-fixed-padding} + (20px * #{$i - 2}) + #{$rocket-tree-item-width-levels} + 5px);
        }

        &:before {
            content: "\00a0";
            width: $rocket-tree-item-width-level-1;
            position: absolute;
            top: $table-cell-padding;
            left: $table-cell-padding;
            background-image: $n2n-tree-indicator-icon;
            background-repeat: no-repeat;
            background-size: 10px;
            background-position: center right 0;
            @if ($i > 1) {
                width: $rocket-tree-item-width-levels;
                border-left: 1px solid $gray-400;
            }

            @if ($i == 1) {
                left: $table-cell-padding;
            }

            @if ($i == 2) {
                left: calc(#{$table-cell-padding} + #{$rocket-tree-offset-to-label/2} - 1px);
            }

            @if ($i == 3) {
                left: calc(#{$table-cell-padding} + 27px - 1px);
            }

            @if ($i > 3) {
                left: calc(#{$table-cell-padding} + 27px + (#{$rocket-tree-offset-to-label}*2 * #{$i - 3}) - 1px);
            }
        }
    }
}



/*
 * Footer
 */

.rocket-pagination {
    display: inline-flex;
    .rocket-pagination-no  {
        width: 5rem;
        text-align: center;
        display: inline-block;
        margin-right: 0.5rem;
    }
    > a,
    > .btn:not(:last-child) {
        margin: 0 0.5rem 0 0;
    }
    > .btn {
        min-width: 2.375rem;
    }
}




.rocket-inactive {
    color: $gray-500;
}